version: '3.8'

services:
  db:
    image: postgres:12-alpine
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres

  node:
    container_name: node
    image: oven/bun:1
    working_dir: /app
    volumes:
      - ./src/__tests__/configs/acala.yml:/app/acala.yml
    command:
      bunx @acala-network/chopsticks@latest -c /app/acala.yml
    ports:
      - 8000:8000
    healthcheck:
      # bun image doesn't have wget or curl ...
      test: |
        bun --eval '
          fetch("http://localhost:8000", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ id: 1, jsonrpc: "2.0", method: "system_health", params: [] })
          })
          .then(res => res.json())
          .then(data => {
            const exitCode = data.result ? 0 : 1;
            process.exit(exitCode)
          })
          .catch(() => process.exit(1));
        '
      interval: 2s
      timeout: 5s
      retries: 100

  eth-rpc:
    container_name: eth-rpc
    image: acala/eth-rpc-adapter:2.8.7
    restart: on-failure
    depends_on:
      node:
        condition: service_healthy
    ports:
      - 8545:8545
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      - ENDPOINT_URL=ws://node:8000
    healthcheck:
      test: |
          wget -q -O- --post-data='{"id": 1, "jsonrpc": "2.0", "method": "eth_chainId", "params": []}' --header='Content-Type: application/json' http://localhost:8545 || exit 1
      interval: 2s
      timeout: 5s
      retries: 100

  test-stack-ready:
    image: alpine:latest
    restart: on-failure
    depends_on:
      eth-rpc:
        condition: service_healthy
      db:
        condition: service_healthy
    command: echo "test stack ready ðŸš€"