/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { BaseRouter, BaseRouterInterface } from "../../src/BaseRouter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "RouterCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "RouterDestroyed",
    type: "event",
  },
  {
    inputs: [],
    name: "fees",
    outputs: [
      {
        internalType: "contract FeeRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "route",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "routeNoFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class BaseRouter__factory {
  static readonly abi = _abi;
  static createInterface(): BaseRouterInterface {
    return new utils.Interface(_abi) as BaseRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseRouter {
    return new Contract(address, _abi, signerOrProvider) as BaseRouter;
  }
}
